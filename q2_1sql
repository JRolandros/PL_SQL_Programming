CREATE OR REPLACE TRIGGER update_st_grade AFTER INSERT OR UPDATE ON student_marks
REFERENCING NEW AS  new_input
FOR EACH ROW 
DECLARE
total_marks NUMBER;
BEGIN
total_marks:= :new_input.mid_term_marks + :new_input.assign1_marks+:new_input.assign2_marks+:new_input.end_term_marks;
CASE 
  WHEN total_marks>=70 AND total_marks<=100 THEN
    INSERT INTO student_grades VALUES(:new_input.studentid,total_marks,'A+');
  WHEN total_marks>=60 AND total_marks<70 THEN 
    INSERT INTO student_grades VALUES(:new_input.studentid,total_marks,'A');
  WHEN total_marks>=40 AND total_marks<60 THEN 
    INSERT INTO student_grades VALUES(:new_input.studentid,total_marks,'B');
  WHEN total_marks>=0 AND total_marks<40 THEN 
    INSERT INTO student_grades VALUES(:new_input.studentid,total_marks,'C');
  ELSE
    DBMS_OUTPUT.PUT_LINE('Such a mark doesnt exist');
  END CASE;
END;